{
  "version": 3,
  "sources": ["../src/SetNativeUI.ts", "../src/Main.ts"],
  "sourcesContent": ["export const PLATFORMS = {\r\n  WINDOWS10: 'WINDOWS10',\r\n  MACOS: 'MACOS',\r\n  LINUX: 'LINUX',\r\n  ANDROID: 'ANDROID',\r\n  IOS: 'IOS',\r\n  UNKNOWN: 'unknown'\r\n};\r\n\r\ntype Platform = [keyof typeof PLATFORMS] | typeof PLATFORMS[keyof typeof PLATFORMS];\r\n\r\nconst windows10CSS = import('./windows10.css');\r\nconst macosCSS = import('./macos.css');\r\nconst linuxCSS = import('./android.css');\r\nconst androidCSS = import('./android.css');\r\nconst iosCSS = import('./ios.css');\r\n\r\nconst NATIVE_UI_CSS_ID = 'native-ui-css';\r\n\r\nfunction isIOS() {\r\n  return [\r\n      'iPad Simulator',\r\n      'iPhone Simulator',\r\n      'iPod Simulator',\r\n      'iPad',\r\n      'iPhone',\r\n      'iPod'\r\n    ].includes(navigator.platform)\r\n    // iPad on iOS 13 detection\r\n    || (navigator.userAgent.includes('Mac') && 'ontouchend' in document);\r\n}\r\n\r\nfunction isAndroid() {\r\n  return navigator.userAgent.includes('Android');\r\n\r\n}\r\n\r\n\r\nexport function getPlatform(): typeof PLATFORMS[keyof typeof PLATFORMS] {\r\n\r\n  try {\r\n    const platform = navigator.platform;\r\n    if (platform.startsWith('Win')) {\r\n      return PLATFORMS.WINDOWS10;\r\n    } else if (isAndroid()) {\r\n      return PLATFORMS.ANDROID;\r\n    } else if (isIOS()) {\r\n      return PLATFORMS.IOS;\r\n    } else if (platform.startsWith('Linux')) {\r\n      return PLATFORMS.LINUX;\r\n    } else if (platform.startsWith('Mac')) {\r\n      return PLATFORMS.MACOS;\r\n    }\r\n    return PLATFORMS.UNKNOWN;\r\n  } catch (e) {\r\n    return PLATFORMS.UNKNOWN;\r\n  }\r\n}\r\n\r\ninterface NativeUIConfig {\r\n  platform?: keyof typeof PLATFORMS | typeof PLATFORMS[keyof typeof PLATFORMS];\r\n}\r\n\r\nasync function getPlatformCSSStr(platform: Platform): Promise<string> {\r\n  switch (platform) {\r\n    case PLATFORMS.WINDOWS10:\r\n      return (await windows10CSS).default;\r\n    case PLATFORMS.MACOS:\r\n      return (await macosCSS).default;\r\n    case PLATFORMS.LINUX:\r\n      return (await linuxCSS).default;\r\n    case PLATFORMS.ANDROID:\r\n      return (await androidCSS).default;\r\n    case PLATFORMS.IOS:\r\n      return (await iosCSS).default;\r\n    default:\r\n      return '';\r\n  }\r\n}\r\n\r\nasync function addCSS(platform: Platform) {\r\n  // console.log('Adding CSS for platform: ' + platform);\r\n  const cssStr = await getPlatformCSSStr(platform);\r\n  const style = document.createElement('style');\r\n  style.textContent = cssStr;\r\n  style.id = NATIVE_UI_CSS_ID;\r\n  document.head.appendChild(style);\r\n}\r\n\r\nfunction removeOldCSS() {\r\n  const oldNativeUICSS = document.getElementById(NATIVE_UI_CSS_ID);\r\n  if (oldNativeUICSS) {\r\n    oldNativeUICSS.remove();\r\n  }\r\n}\r\n\r\nexport async function setNativeUI(config?: NativeUIConfig) {\r\n  removeOldCSS();\r\n  if (!config) {\r\n    config = {};\r\n  }\r\n  if (!config.platform) {\r\n    config.platform = getPlatform();\r\n  }\r\n  await addCSS(config.platform);\r\n}\r\n", "import {getPlatform, PLATFORMS, setNativeUI} from './SetNativeUI';\r\n\r\n\r\nasync function main() {\r\n\r\n  const selector = document.getElementById('platformSelector') as HTMLSelectElement;\r\n  const platforms = Object.keys(PLATFORMS);\r\n  const currPlatform = getPlatform();\r\n  await setNativeUI({platform: currPlatform});\r\n  for (const platform of platforms) {\r\n    const option = document.createElement('option');\r\n    option.value = platform;\r\n    if (platform === currPlatform) {\r\n      option.selected = true;\r\n      option.text = platform + ' (current)';\r\n    } else {\r\n      option.text = platform;\r\n    }\r\n\r\n    selector.appendChild(option);\r\n  }\r\n\r\n  selector.onchange = async () => {\r\n    console.log('Platform changed to ' + selector.value + '. Setting native UI...');\r\n    const platform = selector.value as keyof typeof PLATFORMS;\r\n    await setNativeUI({platform});\r\n  };\r\n\r\n  console.log('You are on: ' + getPlatform());\r\n\r\n  console.log(navigator);\r\n}\r\n\r\n\r\nwindow.onload = () => {\r\n  console.log('Window loaded');\r\n\r\n  console.log('crossOriginIsolated: ' + window.crossOriginIsolated);\r\n  main().then(\r\n    () => {\r\n      console.log('Main finished');\r\n    }\r\n  );\r\n};\r\n"],
  "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",
  "names": []
}
